services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: cursor-rules-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: cursor_rules
      MYSQL_USER: cursor_user
      MYSQL_PASSWORD: cursor_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 后端API服务
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: cursor-rules-backend
    restart: unless-stopped
    environment:
      - DATABASE_URL=mysql+pymysql://cursor_user:cursor_password@mysql:3306/cursor_rules
      - SECRET_KEY=your-super-secret-key-here-change-in-production
      - DEBUG=False
    ports:
      - "8000:8000"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/__pycache__
    command: >
      sh -c "
        sleep 10 &&
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cursor-rules-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://backend:8000
    command: npm run dev

  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: cursor-rules-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - frontend
      - backend

volumes:
  mysql_data:
    driver: local

networks:
  default:
    name: cursor-rules-network